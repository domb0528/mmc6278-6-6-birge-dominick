
> music_shop_hbs@1.0.0 test
> npm run test:run


> music_shop_hbs@1.0.0 test:run
> npm run mysql:stop; npm run mysql:start && node test/db_check.js && mocha test/tests.js $FLAG; npm run mysql:stop


> music_shop_hbs@1.0.0 mysql:stop
> docker container stop mysql-sandbox


> music_shop_hbs@1.0.0 mysql:start
> export FLAG=-d DB_NAME=music_shop_db && npm run mysql:run


> music_shop_hbs@1.0.0 mysql:run
> docker run $FLAG --rm -p 3306:3306 -v $(pwd)/schema:/docker-entrypoint-initdb.d --name=mysql-sandbox -e MYSQL_ALLOW_EMPTY_PASSWORD=root -e MYSQL_DATABASE=$DB_NAME mysql:8 mysqld --authentication_policy=mysql_native_password

8f7295fef7768f13c0da9328c3199c70d4ce3e92d0eadaafebbdb4bb946ae6dd
WAITING FOR MYSQL TO START
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC
WAITING 1 SEC


  e-commerce site
    static files
      ✔ /style.css should serve style.css
      ✔ /index.js should serve index.js
      ✔ /images/acoustic.jpg should serve acoustic image
      ✔ /images/bass.jpg should serve bass image
      ✔ /images/picks.jpg should serve picks image
      ✔ /images/strat.jpg should serve strat image
      ✔ /images/ukulele.jpg should serve ukulele image
      ✔ /images/amp.jpg should serve amp image
      ✔ /images/cable.jpg should serve cable image
      ✔ /images/strap.jpg should serve strap image
      ✔ /images/strings.jpg should serve strings image
    e-commerce api
      cart
        ✔ POST /api/cart should add to cart
        ✔ POST /api/cart should return 404 if inventory item does not exist
        ✔ POST /api/cart should return 409 if item quantity is insufficient
        ✔ PUT /api/cart/:id should change cart quantity
        ✔ PUT /api/cart/:id should return 404 if cart item does not exist
        ✔ PUT /api/cart/:id should return 409 if inventory quantity insufficient
        ✔ DELETE /api/cart/:id should remove cart item
        ✔ DELETE /api/cart/:id should return 404 if cart item does not exist
        ✔ DELETE /api/cart/ should empty cart
    e-commerce front-end routes
      GET / - index/inventory page
        ✔ should return HTML for index page (56ms)
        ✔ should show cart count
        ✔ should render names of items
        ✔ should render items for sale in link tags that lead to product page
        ✔ should render price of items
        ✔ should render images of items
      GET /product/:id - product pages
        GET /product/1 - product page for Stratocaster
          ✔ should return HTML
          ✔ should show cart count
          ✔ should show name (Stratocaster)
          ✔ should show price ($599.99)
          ✔ should show description (One of the most iconic electric guitars ever made.)
          ✔ should show image of product (images/strat.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=1
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/2 - product page for Mini Amp
          ✔ should return HTML
          ✔ should show cart count
          ✔ should show name (Mini Amp)
          ✔ should show price ($49.99)
          ✔ should show description (A small practice amp that shouldn't annoy roommates or neighbors.)
          ✔ should show image of product (images/amp.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=2
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/3 - product page for Bass Guitar
          ✔ should return HTML
          ✔ should show cart count
          ✔ should show name (Bass Guitar)
          ✔ should show price ($399.99)
          ✔ should show description (A four string electric bass guitar.)
          ✔ should show image of product (images/bass.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=3
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/4 - product page for Acoustic Guitar
          ✔ should return HTML
          ✔ should show cart count
          ✔ should show name (Acoustic Guitar)
          ✔ should show price ($799.99)
          ✔ should show description (Perfect for campfire sing-alongs.)
          ✔ should show image of product (images/acoustic.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=4
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/5 - product page for Ukulele
          ✔ should return HTML
          ✔ should show cart count
          ✔ should show name (Ukulele)
          ✔ should show price ($99.99)
          ✔ should show description (A four string tenor ukulele tuned GCEA.)
          ✔ should show image of product (images/ukulele.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=5
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/6 - product page for Strap
          ✔ should return HTML
          ✔ should show cart count
          ✔ should show name (Strap)
          ✔ should show price ($29.99)
          ✔ should show description (Woven instrument strap keeps your guitar or bass strapped to you to allow playing while standing.)
          ✔ should show image of product (images/strap.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=6
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/7 - product page for Assortment of Picks
          ✔ should return HTML
          ✔ should show cart count
          ✔ should show name (Assortment of Picks)
          ✔ should show price ($9.99)
          ✔ should show description (Picks for acoustic or electric players.)
          ✔ should show image of product (images/picks.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=7
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/8 - product page for Guitar Strings
          ✔ should return HTML
          ✔ should show cart count
          ✔ should show name (Guitar Strings)
          ✔ should show price ($12.99)
          ✔ should show description (High quality wound strings for your acoustic or electric guitar or bass.)
          ✔ should show image of product (images/strings.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=8
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
        GET /product/9 - product page for Instrument Cable
          ✔ should return HTML
          ✔ should show cart count
          ✔ should show name (Instrument Cable)
          ✔ should show price ($19.99)
          ✔ should show description (A cable to connect an electric guitar or bass to an amplifier.)
          ✔ should show image of product (images/cable.jpg)
          ✔ should render a form that POSTs to /api/cart?inventoryId=9
          ✔ should render an "add to cart" button inside form
          ✔ should render a quantity input of type number set to 1 inside form
      GET /cart - cart page
        ✔ should return HTML
        ✔ should render "Cart" heading
        ✔ should render "return to store" link
        ✔ should render "empty cart" button
        ✔ should render total
        Cart Item: Stratocaster
          ✔ should render name
          1) should render image
          ✔ should render price
          2) should render quantity
          3) should render calculatedPrice (quantity * price)
          4) should render remove btn
        Cart Item: Strap
          ✔ should render name
          5) should render image
          ✔ should render price
          6) should render quantity
          7) should render calculatedPrice (quantity * price)
          8) should render remove btn
        Cart Item: Assortment of Picks
          ✔ should render name
          9) should render image
          ✔ should render price
          10) should render quantity
          11) should render calculatedPrice (quantity * price)
          12) should render remove btn
        Cart Item: Instrument Cable
          ✔ should render name
          13) should render image
          ✔ should render price
          14) should render quantity
          15) should render calculatedPrice (quantity * price)
          16) should render remove btn
        Cart Item: Mini Amp
          ✔ should render name
          17) should render image
          ✔ should render price
          18) should render quantity
          19) should render calculatedPrice (quantity * price)
          20) should render remove btn


  122 passing (1s)
  20 failing

  1) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render image:
     TypeError: Cannot read properties of null (reading 'classList')
      at Context.<anonymous> (test/tests.js:534:34)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  2) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render quantity:
     TypeError: Expected container to be an Element, a Document or a DocumentFragment but got null.
      at checkContainerType (node_modules/@testing-library/dom/dist/helpers.js:61:11)
      at queryAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:48:35)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:92:15)
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:554:27)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  3) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render calculatedPrice (quantity * price):
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:566:44)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  4) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Stratocaster
             should render remove btn:
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:575:39)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  5) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render image:
     TypeError: Cannot read properties of null (reading 'classList')
      at Context.<anonymous> (test/tests.js:534:34)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  6) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render quantity:
     TypeError: Expected container to be an Element, a Document or a DocumentFragment but got null.
      at checkContainerType (node_modules/@testing-library/dom/dist/helpers.js:61:11)
      at queryAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:48:35)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:92:15)
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:554:27)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  7) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render calculatedPrice (quantity * price):
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:566:44)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  8) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Strap
             should render remove btn:
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:575:39)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  9) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render image:
     TypeError: Cannot read properties of null (reading 'classList')
      at Context.<anonymous> (test/tests.js:534:34)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  10) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render quantity:
     TypeError: Expected container to be an Element, a Document or a DocumentFragment but got null.
      at checkContainerType (node_modules/@testing-library/dom/dist/helpers.js:61:11)
      at queryAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:48:35)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:92:15)
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:554:27)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  11) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render calculatedPrice (quantity * price):
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:566:44)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  12) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Assortment of Picks
             should render remove btn:
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:575:39)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  13) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render image:
     TypeError: Cannot read properties of null (reading 'classList')
      at Context.<anonymous> (test/tests.js:534:34)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  14) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render quantity:
     TypeError: Expected container to be an Element, a Document or a DocumentFragment but got null.
      at checkContainerType (node_modules/@testing-library/dom/dist/helpers.js:61:11)
      at queryAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:48:35)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:92:15)
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:554:27)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  15) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render calculatedPrice (quantity * price):
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:566:44)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  16) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Instrument Cable
             should render remove btn:
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:575:39)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  17) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render image:
     TypeError: Cannot read properties of null (reading 'classList')
      at Context.<anonymous> (test/tests.js:534:34)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  18) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render quantity:
     TypeError: Expected container to be an Element, a Document or a DocumentFragment but got null.
      at checkContainerType (node_modules/@testing-library/dom/dist/helpers.js:61:11)
      at queryAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:48:35)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:92:15)
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at /Users/dominickbirge/Documents/mmc6278/assignment6/mmc6278-6-6-birge-dominick/node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Context.<anonymous> (test/tests.js:554:27)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  19) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render calculatedPrice (quantity * price):
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:566:44)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

  20) e-commerce site
       e-commerce front-end routes
         GET /cart - cart page
           Cart Item: Mini Amp
             should render remove btn:
     TypeError: Cannot read properties of null (reading 'querySelector')
      at Context.<anonymous> (test/tests.js:575:39)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)




> music_shop_hbs@1.0.0 mysql:stop
> docker container stop mysql-sandbox

mysql-sandbox
